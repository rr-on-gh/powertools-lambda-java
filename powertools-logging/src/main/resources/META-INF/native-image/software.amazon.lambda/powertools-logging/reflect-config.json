[
{
  "name":"[Lcom.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.Appender;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.AppenderRef;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.LoggerConfig;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.Property;"
},
{
  "name":"[Lorg.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField;"
},
{
  "name":"com.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.lambda.thirdparty.com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.Context",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAwsRequestId","parameterTypes":[] }, {"name":"getClientContext","parameterTypes":[] }, {"name":"getFunctionName","parameterTypes":[] }, {"name":"getFunctionVersion","parameterTypes":[] }, {"name":"getIdentity","parameterTypes":[] }, {"name":"getInvokedFunctionArn","parameterTypes":[] }, {"name":"getLogGroupName","parameterTypes":[] }, {"name":"getLogStreamName","parameterTypes":[] }, {"name":"getLogger","parameterTypes":[] }, {"name":"getMemoryLimitInMB","parameterTypes":[] }, {"name":"getRemainingTimeInMillis","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.RequestHandler",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.RequestStreamHandler",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBody","parameterTypes":[] }, {"name":"getHeaders","parameterTypes":[] }, {"name":"getHttpMethod","parameterTypes":[] }, {"name":"getIsBase64Encoded","parameterTypes":[] }, {"name":"getMultiValueHeaders","parameterTypes":[] }, {"name":"getMultiValueQueryStringParameters","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getPathParameters","parameterTypes":[] }, {"name":"getQueryStringParameters","parameterTypes":[] }, {"name":"getRequestContext","parameterTypes":[] }, {"name":"getResource","parameterTypes":[] }, {"name":"getStageVariables","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setBody","parameterTypes":["java.lang.String"] }, {"name":"setHeaders","parameterTypes":["java.util.Map"] }, {"name":"setHttpMethod","parameterTypes":["java.lang.String"] }, {"name":"setIsBase64Encoded","parameterTypes":["java.lang.Boolean"] }, {"name":"setMultiValueHeaders","parameterTypes":["java.util.Map"] }, {"name":"setMultiValueQueryStringParameters","parameterTypes":["java.util.Map"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setPathParameters","parameterTypes":["java.util.Map"] }, {"name":"setQueryStringParameters","parameterTypes":["java.util.Map"] }, {"name":"setRequestContext","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent$ProxyRequestContext"] }, {"name":"setResource","parameterTypes":["java.lang.String"] }, {"name":"setStageVariables","parameterTypes":["java.util.Map"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent$ProxyRequestContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccountId","parameterTypes":[] }, {"name":"getApiId","parameterTypes":[] }, {"name":"getAuthorizer","parameterTypes":[] }, {"name":"getDomainName","parameterTypes":[] }, {"name":"getDomainPrefix","parameterTypes":[] }, {"name":"getExtendedRequestId","parameterTypes":[] }, {"name":"getHttpMethod","parameterTypes":[] }, {"name":"getIdentity","parameterTypes":[] }, {"name":"getOperationName","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getRequestId","parameterTypes":[] }, {"name":"getRequestTime","parameterTypes":[] }, {"name":"getRequestTimeEpoch","parameterTypes":[] }, {"name":"getResourceId","parameterTypes":[] }, {"name":"getResourcePath","parameterTypes":[] }, {"name":"getStage","parameterTypes":[] }, {"name":"setHttpMethod","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setRequestId","parameterTypes":["java.lang.String"] }, {"name":"setResourcePath","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent$RequestIdentity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBody","parameterTypes":[] }, {"name":"getCookies","parameterTypes":[] }, {"name":"getHeaders","parameterTypes":[] }, {"name":"getIsBase64Encoded","parameterTypes":[] }, {"name":"getPathParameters","parameterTypes":[] }, {"name":"getQueryStringParameters","parameterTypes":[] }, {"name":"getRawPath","parameterTypes":[] }, {"name":"getRawQueryString","parameterTypes":[] }, {"name":"getRequestContext","parameterTypes":[] }, {"name":"getRouteKey","parameterTypes":[] }, {"name":"getStageVariables","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"setCookies","parameterTypes":["java.util.List"] }, {"name":"setHeaders","parameterTypes":["java.util.Map"] }, {"name":"setIsBase64Encoded","parameterTypes":["boolean"] }, {"name":"setRawPath","parameterTypes":["java.lang.String"] }, {"name":"setRawQueryString","parameterTypes":["java.lang.String"] }, {"name":"setRequestContext","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext"] }, {"name":"setRouteKey","parameterTypes":["java.lang.String"] }, {"name":"setVersion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAccountId","parameterTypes":[] }, {"name":"getApiId","parameterTypes":[] }, {"name":"getAuthorizer","parameterTypes":[] }, {"name":"getDomainName","parameterTypes":[] }, {"name":"getDomainPrefix","parameterTypes":[] }, {"name":"getHttp","parameterTypes":[] }, {"name":"getRequestId","parameterTypes":[] }, {"name":"getRouteKey","parameterTypes":[] }, {"name":"getStage","parameterTypes":[] }, {"name":"getTime","parameterTypes":[] }, {"name":"getTimeEpoch","parameterTypes":[] }, {"name":"setAccountId","parameterTypes":["java.lang.String"] }, {"name":"setApiId","parameterTypes":["java.lang.String"] }, {"name":"setDomainName","parameterTypes":["java.lang.String"] }, {"name":"setDomainPrefix","parameterTypes":["java.lang.String"] }, {"name":"setHttp","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$Http"] }, {"name":"setRequestId","parameterTypes":["java.lang.String"] }, {"name":"setRouteKey","parameterTypes":["java.lang.String"] }, {"name":"setStage","parameterTypes":["java.lang.String"] }, {"name":"setTime","parameterTypes":["java.lang.String"] }, {"name":"setTimeEpoch","parameterTypes":["long"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$Authorizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$Authorizer$JWT",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$CognitoIdentity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$Http",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getMethod","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getProtocol","parameterTypes":[] }, {"name":"getSourceIp","parameterTypes":[] }, {"name":"getUserAgent","parameterTypes":[] }, {"name":"setMethod","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setProtocol","parameterTypes":["java.lang.String"] }, {"name":"setSourceIp","parameterTypes":["java.lang.String"] }, {"name":"setUserAgent","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent$RequestContext$IAM",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBody","parameterTypes":[] }, {"name":"getHeaders","parameterTypes":[] }, {"name":"getHttpMethod","parameterTypes":[] }, {"name":"getIsBase64Encoded","parameterTypes":[] }, {"name":"getMultiValueHeaders","parameterTypes":[] }, {"name":"getMultiValueQueryStringParameters","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getQueryStringParameters","parameterTypes":[] }, {"name":"getRequestContext","parameterTypes":[] }, {"name":"setBody","parameterTypes":["java.lang.String"] }, {"name":"setHeaders","parameterTypes":["java.util.Map"] }, {"name":"setHttpMethod","parameterTypes":["java.lang.String"] }, {"name":"setIsBase64Encoded","parameterTypes":["boolean"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setQueryStringParameters","parameterTypes":["java.util.Map"] }, {"name":"setRequestContext","parameterTypes":["com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent$RequestContext"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent$Elb",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getTargetGroupArn","parameterTypes":[] }, {"name":"setTargetGroupArn","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent$RequestContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getElb","parameterTypes":[] }, {"name":"setElb","parameterTypes":["com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent$Elb"] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRecords","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$RequestParametersEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getSourceIPAddress","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$ResponseElementsEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getxAmzId2","parameterTypes":[] }, {"name":"getxAmzRequestId","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$S3BucketEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getArn","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOwnerIdentity","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$S3Entity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getBucket","parameterTypes":[] }, {"name":"getConfigurationId","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getS3SchemaVersion","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$S3EventNotificationRecord",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAwsRegion","parameterTypes":[] }, {"name":"getEventName","parameterTypes":[] }, {"name":"getEventSource","parameterTypes":[] }, {"name":"getEventTime","parameterTypes":[] }, {"name":"getEventVersion","parameterTypes":[] }, {"name":"getRequestParameters","parameterTypes":[] }, {"name":"getResponseElements","parameterTypes":[] }, {"name":"getS3","parameterTypes":[] }, {"name":"getUserIdentity","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$S3ObjectEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getKey","parameterTypes":[] }, {"name":"getSequencer","parameterTypes":[] }, {"name":"getSize","parameterTypes":[] }, {"name":"getSizeAsLong","parameterTypes":[] }, {"name":"getUrlDecodedKey","parameterTypes":[] }, {"name":"getVersionId","parameterTypes":[] }, {"name":"geteTag","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification$UserIdentityEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPrincipalId","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.tests.EventArgumentsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.amazonaws.services.lambda.runtime.tests.annotations.Event",
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.jsonschema.SchemaAware",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.ser.std.StdSerializer",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.tools.attach.VirtualMachine"
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.OutputStream"
},
{
  "name":"java.io.Serializable",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"timestamp"}]
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"forName","parameterTypes":["java.lang.String"] }, {"name":"getAnnotatedInterfaces","parameterTypes":[] }, {"name":"getAnnotatedSuperclass","parameterTypes":[] }, {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getModule","parameterTypes":[] }, {"name":"getNestHost","parameterTypes":[] }, {"name":"getNestMembers","parameterTypes":[] }, {"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"getDefinedPackage","parameterTypes":["java.lang.String"] }, {"name":"getUnnamedModule","parameterTypes":[] }, {"name":"registerAsParallelCapable","parameterTypes":[] }]
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"timestamp"}]
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"addExports","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"addReads","parameterTypes":["java.lang.Module"] }, {"name":"canRead","parameterTypes":["java.lang.Module"] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPackages","parameterTypes":[] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"isNamed","parameterTypes":[] }, {"name":"isOpen","parameterTypes":["java.lang.String","java.lang.Module"] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clone","parameterTypes":[] }, {"name":"getClass","parameterTypes":[] }, {"name":"getTimestamp","parameterTypes":[] }, {"name":"isTimestamp","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"feature","parameterTypes":[] }]
},
{
  "name":"java.lang.StackWalker"
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.invoke.MethodHandle",
  "methods":[{"name":"bindTo","parameterTypes":["java.lang.Object"] }, {"name":"invokeWithArguments","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"lookup","parameterTypes":[] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"findVirtual","parameterTypes":["java.lang.Class","java.lang.String","java.lang.invoke.MethodType"] }]
},
{
  "name":"java.lang.invoke.MethodType",
  "methods":[{"name":"methodType","parameterTypes":["java.lang.Class","java.lang.Class[]"] }]
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "methods":[{"name":"setAccessible","parameterTypes":["boolean"] }]
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, {"name":"getAnnotatedReceiverType","parameterTypes":[] }, {"name":"getParameterCount","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getModifiers","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"isNamePresent","parameterTypes":[] }]
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedAction"] }, {"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Time"
},
{
  "name":"java.util.AbstractMap",
  "fields":[{"name":"timestamp"}],
  "methods":[{"name":"getTimestamp","parameterTypes":[] }, {"name":"isTimestamp","parameterTypes":[] }]
},
{
  "name":"java.util.HashMap",
  "fields":[{"name":"timestamp"}],
  "methods":[{"name":"getTimestamp","parameterTypes":[] }, {"name":"isTimestamp","parameterTypes":[] }]
},
{
  "name":"java.util.LinkedHashMap",
  "fields":[{"name":"timestamp"}],
  "methods":[{"name":"getTimestamp","parameterTypes":[] }, {"name":"isTimestamp","parameterTypes":[] }]
},
{
  "name":"java.util.Map",
  "fields":[{"name":"timestamp"}]
},
{
  "name":"java.util.SequencedMap",
  "fields":[{"name":"timestamp"}]
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.function.Consumer",
  "queryAllPublicMethods":true
},
{
  "name":"javax.servlet.Servlet"
},
{
  "name":"jdk.internal.misc.Unsafe"
},
{
  "name":"kotlin.jvm.JvmInline"
},
{
  "name":"net.bytebuddy.agent.Installer",
  "methods":[{"name":"agentmain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }, {"name":"getInstrumentation","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"includeSelf","parameterTypes":[] }, {"name":"nullIfEmpty","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindingMechanic","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic"
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.BindingPriority",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"declaringType","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"cache","parameterTypes":[] }, {"name":"privileged","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"fallbackToDefault","parameterTypes":[] }, {"name":"nullIfImpossible","parameterTypes":[] }, {"name":"serializableProxy","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.JavaModule$Module",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaModule$Resolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AppenderSet"
},
{
  "name":"org.apache.logging.log4j.core.appender.AsyncAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ConsoleAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.CountingNoOpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoverAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoversPlugin"
},
{
  "name":"org.apache.logging.log4j.core.appender.FileAppender",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.appender.FileAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.HttpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.NullAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.OutputStreamAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
},
{
  "name":"org.apache.logging.log4j.core.appender.SmtpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SocketAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SyslogAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.WriterAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.ColumnMapping"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.JmsAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAll"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAny"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfNot"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Route"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Routes"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.RoutingAppender"
},
{
  "name":"org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig"
},
{
  "name":"org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderControlArraySet",
  "fields":[{"name":"appenderArray"}]
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderRef",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenderRef","parameterTypes":["java.lang.String","org.apache.logging.log4j.Level","org.apache.logging.log4j.core.Filter"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.AppendersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenders","parameterTypes":["org.apache.logging.log4j.core.Appender[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevelConfig"
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevels"
},
{
  "name":"org.apache.logging.log4j.core.config.DefaultAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.config.HttpWatcher"
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newRootBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.config.LoggersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createLoggers","parameterTypes":["org.apache.logging.log4j.core.config.LoggerConfig[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.PropertiesPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.Property"
},
{
  "name":"org.apache.logging.log4j.core.config.ScriptsPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.EnvironmentArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.filter.AbstractFilterable$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.filter.BurstFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.CompositeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DenyAllFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelRangeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.NoMarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.RegexFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ScriptFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StringMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StructuredDataFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.TimeFilter"
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvLogEventLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvParameterLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.GelfLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.HtmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.JsonLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.LambdaJsonLayoutTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"shouldLogInStructuredFormat","parameterTypes":[] }, {"name":"shouldLogWithRFC3339TimestampFormat_WhenLambdaLoggingIsJSON","parameterTypes":[] }, {"name":"shouldModifyLogLevelBasedOnEnvVariable","parameterTypes":[] }, {"name":"shouldModifyLogLevelBasedOnSamplingRule","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.layout.LevelPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.LoggerFields"
},
{
  "name":"org.apache.logging.log4j.core.layout.MarkerPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.MessageLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternMatch"
},
{
  "name":"org.apache.logging.log4j.core.layout.Rfc5424Layout"
},
{
  "name":"org.apache.logging.log4j.core.layout.ScriptPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.SerializedLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.SyslogLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.XmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.YamlLayout"
},
{
  "name":"org.apache.logging.log4j.core.lookup.ContextMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.DateLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EnvironmentLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EventLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JavaLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JndiLookup"
},
{
  "name":"org.apache.logging.log4j.core.lookup.Log4jLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.LowerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MainMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MarkerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.StructuredDataLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.UpperLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketAddress"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketOptions"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketPerformancePreferences"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.SslConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.DatePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.HighlightConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LevelPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MapPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MaxLengthConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MessagePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["org.apache.logging.log4j.core.config.Configuration","java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacement"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.StyleConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.UuidPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.script.Script"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptFile"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptRef"
},
{
  "name":"org.apache.logging.log4j.core.util.KeyValuePair"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.JsonTemplateLayout",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.layout.template.json.JsonTemplateLayout$EventTemplateAdditionalField"
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.CaseConverterResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.CounterResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EndOfBatchResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EventAdditionalFieldInterceptor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.EventRootObjectKeyInterceptor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ExceptionResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ExceptionRootCauseResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.LevelResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.LoggerResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MainMapResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MapResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MarkerResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MessageParameterResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.MessageResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.PatternResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.SourceResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadContextDataResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadContextStackResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.ThreadResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.resolver.TimestampResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.layout.template.json.util.RecyclerFactoryConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.maven.surefire.junitplatform.JUnitPlatformProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.maven.surefire.api.provider.ProviderParameters"] }]
},
{
  "name":"org.apiguardian.api.API",
  "queryAllPublicMethods":true
},
{
  "name":"org.aspectj.runtime.internal.AroundClosure",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.jctools.queues.MpmcArrayQueue"
},
{
  "name":"org.joda.time.DateTime",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.joda.time.ReadableDateTime",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.joda.time.ReadableInstant",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.joda.time.base.AbstractDateTime",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.joda.time.base.AbstractInstant",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.joda.time.base.BaseDateTime",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.junit.internal.AssumptionViolatedException"
},
{
  "name":"org.junit.jupiter.api.Test",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.api.TestTemplate",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.api.extension.ExtendWith",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.params.ParameterizedTest",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.params.ParameterizedTestExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.junit.jupiter.params.provider.ArgumentsProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.params.provider.ArgumentsSource",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.jupiter.params.support.AnnotationConsumer",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.platform.commons.annotation.Testable",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.platform.launcher.LauncherSession",
  "methods":[{"name":"getLauncher","parameterTypes":[] }]
},
{
  "name":"org.junit.platform.launcher.core.LauncherFactory",
  "methods":[{"name":"openSession","parameterTypes":[] }]
},
{
  "name":"org.mockito.Mock",
  "queryAllPublicMethods":true
},
{
  "name":"org.mockito.codegen.Context$MockitoMock$0a0jka3op99200N"
},
{
  "name":"org.mockito.codegen.Context$MockitoMock$0a0jka3op99200N$auxiliary$4cscpe1S"
},
{
  "name":"org.mockito.codegen.Context$MockitoMock$0a0jka3op99200N$auxiliary$7m9oaq0S"
},
{
  "name":"org.mockito.configuration.MockitoConfiguration"
},
{
  "name":"org.mockito.internal.configuration.DefaultDoNotMockEnforcer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.InjectingAnnotationEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockAccess",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.util.ConsoleMockitoLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.util.reflection.InstrumentationMemberAccessor$Dispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.util.reflection.ModuleMemberAccessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.osgi.framework.FrameworkUtil"
},
{
  "name":"software.amazon.lambda.powertools.core.internal.LambdaHandlerProcessor",
  "fields":[{"name":"IS_COLD_START"}, {"name":"SERVICE_NAME"}]
},
{
  "name":"software.amazon.lambda.powertools.logging.LoggingUtilsTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"shouldRemoveCustomKeyOnThreadContext","parameterTypes":[] }, {"name":"shouldRemoveCustomKeysOnThreadContext","parameterTypes":[] }, {"name":"shouldSetCustomKeyAsMapOnThreadContext","parameterTypes":[] }, {"name":"shouldSetCustomKeyOnThreadContext","parameterTypes":[] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolApiGatewayHttpApiCorrelationId",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolApiGatewayHttpApiCorrelationId$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolApiGatewayRestApiCorrelationId",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolApiGatewayRestApiCorrelationId$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolEnabled",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"anotherMethod","parameterTypes":[] }, {"name":"handleRequest","parameterTypes":["java.lang.Object","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolEnabled$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolEnabled$AjcClosure3",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolEnabledForStream",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.io.InputStream","java.io.OutputStream","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolEnabledForStream$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolSamplingEnabled",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.lang.Object","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerLogToolSamplingEnabled$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolDisabled",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolDisabledForStream",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventDisabled",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.lang.Object","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventDisabled$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabled",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.lang.Object","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabled$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabledForStream",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.io.InputStream","java.io.OutputStream","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabledForStream$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabledWithCustomMapper",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["com.amazonaws.services.lambda.runtime.events.models.s3.S3EventNotification","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabledWithCustomMapper$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowerToolLogEventEnabledWithCustomMapper$S3EventNotificationSerializer",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogAlbCorrelationId",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogAlbCorrelationId$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogEnabledWithClearState",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.lang.Object","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogEnabledWithClearState$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogEventBridgeCorrelationId",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleRequest","parameterTypes":["java.io.InputStream","java.io.OutputStream","com.amazonaws.services.lambda.runtime.Context"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.handlers.PowertoolsLogEventBridgeCorrelationId$AjcClosure1",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.lambda.powertools.logging.internal.LambdaJsonLayout"
},
{
  "name":"software.amazon.lambda.powertools.logging.internal.LambdaLoggingAspect",
  "fields":[{"name":"LEVEL_AT_INITIALISATION"}, {"name":"LOG_EVENT"}],
  "methods":[{"name":"resetLogLevels","parameterTypes":["org.apache.logging.log4j.Level"] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.internal.LambdaLoggingAspectTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"shouldHaveNoEffectIfNotUsedOnLambdaHandler","parameterTypes":[] }, {"name":"shouldLogAndClearLogContextOnEachRequest","parameterTypes":[] }, {"name":"shouldLogCorrelationIdOnALBEvent","parameterTypes":["com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent"] }, {"name":"shouldLogCorrelationIdOnAPIGatewayProxyRequestEvent","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent"] }, {"name":"shouldLogCorrelationIdOnAPIGatewayV2HTTPEvent","parameterTypes":["com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent"] }, {"name":"shouldLogCorrelationIdOnStreamHandler","parameterTypes":[] }, {"name":"shouldLogEventForHandler","parameterTypes":[] }, {"name":"shouldLogEventForHandlerWhenEnvVariableSetToTrue","parameterTypes":[] }, {"name":"shouldLogEventForHandlerWithOverriddenObjectMapper","parameterTypes":[] }, {"name":"shouldLogEventForStreamAndLambdaStreamIsValid","parameterTypes":[] }, {"name":"shouldLogServiceNameWhenEnvVarSet","parameterTypes":[] }, {"name":"shouldNotLogEventForHandlerWhenEnvVariableSetToFalse","parameterTypes":[] }, {"name":"shouldNotSetLambdaContextForStreamHandlerWhenDisabled","parameterTypes":[] }, {"name":"shouldNotSetLambdaContextWhenDisabled","parameterTypes":[] }, {"name":"shouldSetColdStartFlag","parameterTypes":[] }, {"name":"shouldSetLambdaContextForStreamHandlerWhenEnabled","parameterTypes":[] }, {"name":"shouldSetLambdaContextWhenEnabled","parameterTypes":[] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.internal.LambdaTimestampResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"software.amazon.lambda.powertools.logging.internal.PowertoolsResolverFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"sun.reflect.ReflectionFactory",
  "methods":[{"name":"getReflectionFactory","parameterTypes":[] }, {"name":"newConstructorForSerialization","parameterTypes":["java.lang.Class","java.lang.reflect.Constructor"] }]
}
]
